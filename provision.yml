---
- hosts: servers
  vars_files:
    - vars.yml
  gather_facts: false
  sudo: true

  tasks:
  - name: Create the project directory.
    file: state=directory path={{ project_root }}

  - name: Create user.
    user: home={{ project_root }}/home/ name={{ project_name }} state=present

  - name: Update the project directory.
    file: group={{ project_name }} owner={{ project_name }} mode=755 state=directory path={{ project_root }}

  - name: Create the code directory.
    file: group={{ project_name }} owner={{ project_name }} mode=755 state=directory path={{ project_root }}/code/

  - name: Install required system packages.
    apt: pkg={{ item }} state=installed update-cache=yes
    with_items: "{{ system_packages }}"

  - name: Install required Python packages.
    easy_install: name={{ item }}
    with_items: "{{ python_packages }}"

  - name: Mount code folder.
    mount: fstype=vboxsf opts=uid={{ project_name }},gid={{ project_name }} name={{ project_root }}/code/ src={{ project_name }} state=mounted
    when: "{{vm}} == 1"

  - name: Create the SSH directory.
    file: state=directory path={{ project_root }}/home/.ssh/
    when: "{{vm}} == 0"

  - name: Create the SSL directory.
    file: state=directory path={{ project_root }}/home/ssl/

  # - name: Upload SSL cert.
  #   copy: src=files/ssl/{{ project_name }}.crt dest={{ project_root }}/home/ssl/{{ project_name }}.pem
  #
  # - name: Upload SSL key.
  #   copy: src=files/ssl/{{ project_name }}.key dest={{ project_root }}/home/ssl/{{ project_name }}.key
  #
  # - name: Upload dhparam.
  #   copy: src=files/ssl/dhparam.pem dest={{ project_root }}/home/ssl/dhparam.pem

  - name: Change permissions.
    shell: "chown -R {{ project_name }}:{{ project_name }} {{ project_root }}"

  - name: Remove unwanted nginx sites
    shell: "cd /etc/nginx/sites-enabled/ && ls | grep -v {{ project_name }} | xargs rm"

  - name: Install nginx configuration file.
    template: src=files/conf/nginx.conf dest=/etc/nginx/sites-enabled/{{ project_name }}
    notify: restart nginx

  - name: Install init scripts.
    template: src=files/init/{{ item }}.conf dest=/etc/init/{{ project_name }}_{{ item }}.conf
    with_items: "{{ initfiles }}"

  handlers:
    - include: handlers.yml

- include: deploy.yml

- hosts: servers
  vars_files:
    - vars.yml
  gather_facts: false
  sudo: true

  tasks:
  - name: Restart services.
    service: name={{ project_name }}_{{ item }} state=restarted
    with_items: "{{ initfiles }}"
